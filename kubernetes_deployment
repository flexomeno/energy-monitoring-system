---
apiVersion: v1
kind: Namespace
metadata:
  name: energy-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: energy-monitoring
  labels:
    app: mosquitto
data:
  mosquitto.conf: |
    listener 1883
    allow_anonymous true
    persistence true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: energy-monitoring
  labels:
    app: telegraf

data:
  telegraf.conf: |
    [agent]
      interval = "10s"
      round_interval = true

    [[outputs.influxdb]]
      urls = ["http://influxdb:8086"]
      database = "tasmota"
      username = "admin"
      password = "admin123"

    [[inputs.mqtt_consumer]]
      servers = ["tcp://mosquitto:1883"]
      topics = ["tele/tasmota_E8D2BC/SENSOR"]
      data_format = "json"
      name_override = "tasmota_energia"
      tagexclude = ["host"]
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-pvc
  namespace: energy-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: energy-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  namespace: energy-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
      - name: mosquitto
        image: eclipse-mosquitto
        ports:
          - containerPort: 1883
        volumeMounts:
          - name: config
            mountPath: /mosquitto/config
      volumes:
        - name: config
          configMap:
            name: mosquitto-config
---
apiVersion: v1
kind: Service
metadata:
  name: mosquitto
  namespace: energy-monitoring
spec:
  type: LoadBalancer
  selector:
    app: mosquitto
  ports:
    - port: 1883
      targetPort: 1883
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: energy-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - name: influxdb
        image: influxdb:1.8
        ports:
          - containerPort: 8086
        env:
          - name: INFLUXDB_DB
            value: "tasmota"
          - name: INFLUXDB_HTTP_AUTH_ENABLED
            value: "true"
          - name: INFLUXDB_ADMIN_USER
            value: "admin"
          - name: INFLUXDB_ADMIN_PASSWORD
            value: "admin123"
        volumeMounts:
          - mountPath: /var/lib/influxdb
            name: influxdb-storage
      volumes:
        - name: influxdb-storage
          persistentVolumeClaim:
            claimName: influxdb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: energy-monitoring
spec:
  type: NodePort
  selector:
    app: influxdb
  ports:
    - port: 8086
      targetPort: 8086
      nodePort: 32086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  namespace: energy-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf:latest
        volumeMounts:
          - name: telegraf-config
            mountPath: /etc/telegraf/telegraf.conf
            subPath: telegraf.conf
      volumes:
        - name: telegraf-config
          configMap:
            name: telegraf-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: energy-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
          - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "admin"
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: energy-monitoring
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32300
